import React, { Component } from 'react';
import { slide as Menu } from 'react-burger-menu';
import DatasetTable from "./DatasetTable";
import SampleTable from "./SampleTable";
import { connect } from 'react-redux';

class SideBar  extends Component {
    render(){return (
        <div>
        <Menu>
           

            <a className="menu-item" href="/datasettable">
                List of Datasets
                <DatasetTable prop={this.props}/>
      </a>

            <a className="menu-item" href="/sampletable">
                List of Samples
      </a>

        </Menu>
        </div>
    );
    }
}


function mapStateToProps(state) {
  return {
    isAuthenticated: state.user.token
  };
}
export default connect(mapStateToProps)(SideBar);

html,
body {
  margin: 0;
}

#App {
  font-family: sans-serif;
  height: 100vh;
}

#page-wrap {
  text-align: center;
  overflow: auto;
}

.bm-item {
  display: inline-block;
  text-decoration: none;
  margin-bottom: 10px;
  color: #d1d1d1;
  transition: color 0.2s;
}

.bm-item:hover {
  color: white;
}

.bm-burger-button {
  position: fixed;
  width: 36px;
  height: 30px;
  left: 36px;
  top: 36px;
}

.bm-burger-bars {
  background: #373a47;
}

.bm-cross-button {
  height: 24px;
  width: 24px;
}

.bm-cross {
  background: #bdc3c7;
}

.bm-menu {
  background: #373a47;
  padding: 2.5em 1.5em 0;
  font-size: 1.15em;
}

.bm-morph-shape {
  fill: #373a47;
}

.bm-item-list {
  color: #b8b7ad;
}

.bm-overlay {
  background: rgba(0, 0, 0, 0.3);
}


import React from 'react';
import {Link} from 'react-router-dom';
import { connect } from "react-redux";
import * as actions from "../../actions/auth";
/**
 * Navbar component to display Navigation on HomePage
 */
const useStyles = makeStyles(theme => ({
  root: {
    flexGrow: 1
  },
  menuButton: {
    marginRight: theme.spacing(2)
  },
  title: {
    flexGrow: 1
  }
}));
const  Navbar = ({user, logout}) => (

  <header className="navbar">
    <nav className="navbar__navigation">
      <div />
      <div className="navbar__logo">
        <Link to='/'>IFEDS</Link>
      </div>
      <div className="spacer" />
      <div className="navbar_navigation-items" >
       
        <ul>
          <li>
            {
             user === ""? <Link to="/login">Login</Link>:<Link to="/login">Login</Link>
//onClick={() => logout()
      }

          </li>
        </ul>
      </div>
    </nav>
  </header>
);
function mapStateToProps(state) {
  return {
    user: state.user,
  };
}

export default connect(mapStateToProps, { logout: actions.logout })(
  Navbar
);



{datasetDetail.map((key, index) => {
        {<h1 align="center">{key.datasetName}</h1>
                <p align="center">{key.description}</p>})}




  /* <div>
                 <h3>
                   <h3 style={{ color: "blue" }}>SampleDescriptor</h3>

                   {sampleDescriptors &&
                     sampleDescriptors.map(sampleDesc => (
                       <>
                         {Object.keys(sampleDesc.sampleDescriptor).map(key => (
                           <div>{sampleDesc.sampleDescriptor[key]}</div>
                         ))}
                         <div>{sampleDesc.value}</div>
                         <div>{sampleDesc.unitOfMeasurement}</div>
                       </>
                     ))}
                 </h3>
               </div> */ 
}


           {
             /* <h3>
              {JSON.stringify(
                  dataset.experimentTypes &&
                    dataset.experimentTypes.experimentType
              )}
            </h3> */
           }
           {
             /* <Card className={classes.bullet}>
             <div>
               <h3 style={{ color: "blue" }}> Sample </h3>
               <h3>
                 Summary:{" "}
                 {JSON.stringify(dataset.sample && dataset.sample.name)}
               </h3>
               <h3>
                 <div>{sample.sampleId}</div>
                 <div>{sample.name}</div>
                 <div>{sample.description}</div>
                 <div>{sample.url}</div>
               </h3>
             </div>
             </Card> */
           }


              {
                /* <h3>{JSON.stringify(  dataset.keywords)}</h3> */
              }


              // {
//                          dataFiles && dataFiles.map(data =>{
//                           const ret 
//                               <TableRow>
//                                 <TableCell> {data.origFileId}</TableCell>
//                                 <TableCell>{data.description}</TableCell>
//                                 <TableCell>{data.data_file_size}</TableCell>
//                               </TableRow>
                            
//                          }

//                          )
//                        }
// //  {
//    dataFiles &&
//      dataFiles.map(data => (
//        <>
//          <h4 style={{ color: "#5bc0be", marginBottom: "0px" }}>
//            <TableCell> {data.origFileId}</TableCell>
//            <TableCell>{data.description}</TableCell>
//            <TableCell>{data.data_file_size}</TableCell>
//          </h4>
//        </>
//      ));
//  }
// {
//   Object.keys(data.dataType).map(key3 => <th> {data.dataType[key3]}</th>);
// }
{/* <Card className={classes.bullet}>
  <div>
    <h3>
      <h3 style={{ color: "blue" }}> Provider </h3>
      Name:
      {JSON.stringify(dataset.provider && dataset.provider.name)}
      <br />
      providerGroup:
      {JSON.stringify(dataset.provider && dataset.provider.providerGroup)}
      <br />
      Department:
      {JSON.stringify(dataset.provider && dataset.provider.department)}
      <br />
      Affiliation:
      {JSON.stringify(dataset.provider && dataset.provider.affiliation)}
      <br />
      URL:
      {JSON.stringify(dataset.provider && dataset.provider.url)}
      <br />
      Contact:
      {JSON.stringify(dataset.provider && dataset.provider.contact)}
      <br />
      {/* UserName:
              {JSON.stringify(
                  dataset.provider &&
                    dataset.provider.username
    //           )} */}
    //   <br />
    //   Email:
    //   {JSON.stringify(dataset.provider && dataset.provider.email)}
    // </h3>
//   </div>
// </Card>;
//  */}
//\xa0\xa0 ${row["url"]} \xa0\xa0  ${row["grantNumber"]}


setSampleData({ [name]: newValue }); useReducer(
    (state, newState) => ({ ...state, ...newState }),
    {
      name: "",
      sample_type_id : "",
      url : "",
      description: "",
      sample_descriptors : []
    }
  ); 



